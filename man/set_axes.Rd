% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/axes_ticks.R
\name{set_axes}
\alias{set_axes}
\title{Axis and tick control for \code{\link[=roboplot]{roboplot()}}}
\usage{
set_axes(
  y = NULL,
  x = NULL,
  yticktype = NULL,
  xticktype = NULL,
  ytitle = "",
  xtitle = "",
  yformat = NULL,
  xformat = NULL,
  ylim = c(NA, NA),
  xlim = c(NA, NA),
  yfont = NULL,
  xfont = NULL,
  y2 = NULL,
  y2font = NULL,
  ylegend = NULL,
  y2title = "",
  y2legend = NULL
)
}
\arguments{
\item{x, y}{Character. The name of the column from parameter 'd' of
\code{\link[=roboplot]{roboplot()}} used for the axis. Defaults to "time" and "value".}

\item{xticktype, yticktype}{Characters. Determines axis formatting within
\code{\link[=roboplot]{roboplot()}}. One of "character", "date" or "numeric". Defaults to "date" and
"numeric".}

\item{xtitle, ytitle, y2title}{Character. Used as the axis title.}

\item{xformat, yformat}{Character. Formatting for axis tick text. Use
\href{https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md}{d3 time format}
for dates and \href{https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_forma}{d3 number format}
for numbers. Ignored for characters.}

\item{xlim, ylim}{Vector of length 2. Used as the axis limits. These are not
type-checked by \code{\link[=roboplot]{roboplot()}}, but should match the values used in the
respecting plot axis.}

\item{xfont, yfont, y2font}{Functions. Use \code{\link[=set_font]{set_font()}}. Note that secondary
y-axis will always use the font size of the main y-axis, but you may set the
family and color separately.}

\item{y2}{Character vector. Observations from param 'color' of \link{roboplot}
which will use a secondary y-axis. Parameter 'zeroline' will be ignored.}

\item{ylegend, y2legend}{Characters. Only used when y2 is given. Use to label
observations described by y2 separately in plot legend from other observations.}
}
\value{
A list.
}
\description{
Define axis and axis tick formats for \code{\link[=roboplot]{roboplot()}} plots.
}
\examples{
# The primary usage is for creating horizontal bar plots when combining the
# roboplotr::roboplot plot_axes control with plot_mode "horizontal".

set_roboplot_options(caption_template = "Lähde: {text}.")

d <- energiantuonti |>
  dplyr::filter(Alue \%in\% c("Kanada","Norja","Yhdistynyt kuningaskunta"))
attr(d, "frequency") <- "Quarterly"

# Control the plot axes with roboplotr::set_axes, setting the columns
# from roboplotr::roboplot variable 'd' as the axis data sources with 'x' and
# 'y', and ticktypes with 'xticktype' and 'yticktype'.
d |> dplyr::filter(time == max(time)) |>
  roboplot(Suunta,
           stringr::str_glue("Energian tuonti {lubridate::year(max(d$time))}"),
           "Milj. €","Tilastokeskus",
           plot_type = "bar",
           plot_mode = "horizontal",
           plot_axes = set_axes(
             y = "Alue",
             yticktype = "character",
             x = "value",
             xticktype = "numeric")
  )

# You can use 'xtitle' and 'ytitle' to provide labeling for axis titles,
# and control the axis format with d3 time
# (https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md)
# and number
# (https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_forma)
# vector for 'xlim' and 'ylim'. These are not typed by roboplotr::roboplot(),
# but must match the corresponding axis values.

d |>
  dplyr::filter(Suunta == "Tuonti") |>
  roboplot(Alue,"Energian tuonti","Milj. €","Tilastokeskus",
           plot_axes = set_axes(
             ytitle = "Arvo",
             xformat = "Y\%y",
             yformat = "+$05,",
             ylim = c(-200,1500),
             xlim = c("2015-01-01","2023-01-01"))
  )

# Additionally, you may use logartihmic axis for any numeric variable used in
# plot axes.
d |>
  dplyr::filter(Suunta == "Tuonti") |>
  roboplot(Alue,"Energian tuonti","Milj. €","Tilastokeskus",
           plot_axes = set_axes(yticktype = "log")
  )

# Providing a vector of strings matching observations from roboplot() param 'color'
# as 'y2' will add a secondary y-axis. Any provided zeroline is currently ignored
# when two y-axes are present.
d |>
  dplyr::filter(Suunta == "Tuonti", Alue \%in\% c("Yhdistynyt kuningaskunta","Norja")) |>
  roboplot(Alue,
           "Energian tuonti",
           "Milj. \u20AC",
           "Tilastokeskus",
           plot_axes = set_axes(y2 = "Yhdistynyt kuningaskunta"))

# Giving no observations that match the param 'color' in roboplot() causes roboplot()
# to stop.
d2 <- d |>
  dplyr::filter(Suunta == "Tuonti",
                Alue \%in\% c("Yhdistynyt kuningaskunta", "Norja"))
if(interactive()) {
  d2 |>
    roboplot(Alue,
             "Energian tuonti",
             "Milj. \u20AC",
             "Tilastokeskus",
             plot_axes = set_axes(y2 = "Kanada"))
}

# You might want to override the default labels that are added to legend. Using
# them without giving any items in y2 does nothing. You probably want to explicitly
# reorder the observations.
d2 |>
  dplyr::mutate(Alue = forcats::fct_relevel(Alue, "Yhdistynyt kuningaskunta","Norja")) |>
  roboplot(
    Alue,
    "Energian tuonti",
    "Milj. \u20AC",
    "Tilastokeskus",
    plot_axes = set_axes(
      y2 = "Yhdistynyt kuningaskunta",
      ylegend = "1.",
      y2legend = "2."
    )
  )

# Or maybe you only have two observations and you want to match them by color
# instead of labeling.
d2 |>
  dplyr::mutate(Alue = forcats::fct_relevel(Alue, "Yhdistynyt kuningaskunta","Norja")) |>
  roboplot(
    Alue,
    "Energian tuonti",
    "Milj. \u20AC",
    "Tilastokeskus",
    plot_axes = set_axes(
      y2 = "Yhdistynyt kuningaskunta",
      yfont = set_font(color = getOption("roboplot.colors.traces")[2]),
      y2font = set_font(color = getOption("roboplot.colors.traces")[1]),
      ylegend = "",
      y2legend = ""
    )
  )


# Or you could use the axis titles to differentiate between the observations. This
# might be especially appropriate if the values are on a completely different scale.
d2 |>
  dplyr::mutate(Alue = forcats::fct_relevel(Alue, "Yhdistynyt kuningaskunta","Norja")) |>
  dplyr::mutate(value = ifelse(Alue == "Norja", value / 1000, value)) |>
  roboplot(
    Alue,
    "Energian tuonti",
    caption = "Tilastokeskus",
    plot_axes = set_axes(
      y2 = "Yhdistynyt kuningaskunta",
      ytitle = "Norja, Mrd. €",
      y2title = "Yhdistynyt kuningaskunta, Milj €",
      ylegend = "",
      y2legend = ""
    )
  )


# roboplotr::set_axes also gives the user fine-grained control for
# plots where there might not be data in a format that is directly transferable
# to date or numeric format.

d2 <- dplyr::tribble(
  ~time, ~value,
  "2021 Jan-Oct", 7.2,
  "Jan-Nov", 6.0,
  "Jan-Dec", 4.4,
  "2022 Jan-Feb", 3.7,
  "Jan-Mar", 0.7,
  "Jan-Apr", -2.7,
  "Jan-May", -4.0,
  "Jan-Jun", -5.4,
  "Jan-Jul", -6.4,
  "Jan-Aug", -7.4,
  "Jan-Sep", -8.0,
  "Jan-Oct", -8.8
)

set_roboplot_options(
  caption_template = "Source: {text}."
 )

d2 |>
  roboplotr::roboplot(title = "Growth Rate of Investment",
                      caption = "National bureau of statistics, China",
                      plot_axes = set_axes(xticktype = "character"))

# Or you might have numeric data on both axes. roboplotr::roboplot() will draw
# any traces in the order they appear in the data, so it is up to the user to
# order the traces properly.

d3 <- dplyr::tibble(time =
               seq.Date(from = lubridate::floor_date(
                 lubridate::today(), "years"
               )-lubridate::years(10),
               to = lubridate::floor_date(lubridate::today(),"years"),
               by = "year"),
             obs1 = round(runif(11, min = 0, max = 120),1),
             value = round(runif(11, min = -120, max = 120),1))

d3 |> dplyr::arrange(obs1, value) |>
  roboplotr::roboplot(title = "Random values",
                      caption = "Robonomist",
                      plot_axes = set_axes(
                        x = "obs1",
                        xticktype = "numeric"))

set_roboplot_options(
caption_template = "Lähde {text}."
)

# You might just want to switch the axes for time and value
d |> dplyr::filter(Suunta == "Tuonti") |>
  roboplotr::roboplot(Alue, "Energian tuonti","Milj. €", "Tilastokeskus",
                      plot_axes = set_axes(
                        y = "time",
                        yticktype = "date",
                        x = "value",
                        xticktype = "numeric"
                      ))

# Or you might want to draw character strings on some axis.
d |> dplyr::filter(Suunta == "Tuonti") |>
  roboplotr::roboplot(Alue, "Energian tuonti","Milj. €", "Tilastokeskus",
                      plot_axes = set_axes(
                        y = "Alue",
                        yticktype = "character",
                        x = "value",
                        xticktype = "numeric"
                      ))

# Making a reasonable line plot like this is a challenge, though, and you are
# better off with a horizontal bar plot.
d |>
dplyr::filter(Suunta == "Tuonti", time == max(time)) |>
  roboplotr::roboplot(Alue, "Energian tuonti","Milj. €", "Tilastokeskus",
                      plot_type = "bar",
                      plot_mode = "horizontalfill",
                      plot_axes = set_axes(
                        y = "Alue",
                        yticktype = "character",
                        x = "value",
                        xticktype = "numeric"
                      ))
# Revert to defaults:
set_roboplot_options(reset = TRUE)

}
