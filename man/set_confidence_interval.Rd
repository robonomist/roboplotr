% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/confidence_interval.R
\name{set_confidence_interval}
\alias{set_confidence_interval}
\title{Configure Confidence Display}
\usage{
set_confidence_interval(
  type = NULL,
  confidence = NULL,
  bar_color = NULL,
  opacity = NULL,
  smoothing = NULL,
  start_type = "flat",
  stop_type = "flat",
  show_legend = TRUE
)
}
\arguments{
\item{type}{Character. Specifies the type of confidence display: "bars" for error bars or "area" for shaded areas.}

\item{confidence}{Symbol or character. Columns from \code{d} in \code{roboplot()} that provide the labels (if character or factor) or values (if numeric) for error areas and bars.}

\item{bar_color}{Characters. Colors for error bars. Must be hexadecimal colors or valid CSS colors. Only applicable when \code{type = "bars"}.}

\item{opacity}{Numeric. Opacity of the shaded area, ranging from 0 (completely transparent) to 1 (completely opaque). Only applicable when \code{type = "area"}.}

\item{smoothing}{Numeric. Smoothing factor for the shaded area, typically between 0 and 1. Only applicable when \code{type = "area"}.}

\item{start_type}{Currently inactive. Character. Defines how the shaded area starts when \code{type = "area"}. Use "flat" or "point". Default is "flat".}

\item{stop_type}{Currently inactive. Character. Defines how the shaded area ends when \code{type = "area"}. Use "flat" or "point". Default is "flat".}

\item{show_legend}{Logical. Whether to show the legend item for the shaded area. Default is TRUE.}
}
\description{
Adds and customizes error bars or shaded areas in \code{\link[=roboplot]{roboplot()}}s.
Use this function to visually represent uncertainty in the data by adding error bars or shaded areas, based on the specified type.
}
\details{
\code{set_confidence_interval()} replaces the deprecated \code{set_errorbars()} function. Use this function to add either error bars or shaded areas to your plots by setting the \code{type} parameter.
When \code{type = "bars"}, you can specify \code{error_y}, and \code{ycolor} to customize the appearance of error bars.
When \code{type = "area"}, you can adjust the \code{opacity} and \code{smoothing} of the shaded area to represent the confidence range visually.
}
\examples{
# When the error is symmetrical for each time point, use `set_confidence_interval()`
# use `set_confidence_interval()` to add error bars to a plot where the confidence
# interval is a numeric column. The given value will be added to or subtracted from 
# the trace the confidence interval value relates to by `roboplot()` param `color`.

d <- energiantuonti |>
  dplyr::filter(Alue == "Venäjä", Suunta == "Tuonti") |>
  dplyr::mutate(confidence_interval = sd(value))

d |>
  roboplot(
    Suunta,
    pattern = Alue,
    title = "Energian tuonti",
    subtitle = "Virhepalkeilla",
    caption = "Tilastokeskus",
    confidence_interval = set_confidence_interval(type = "bars")
  )
# Or use `type = "area"` to add confidence area to a plot.
d |>
  roboplot(Suunta,
           title = "Energian tuonti",
           subtitle = "Luottamusalueella",
           caption = "Tilastokeskus",
           confidence_interval = set_confidence_interval("area"))

# Change the color of the error bars
d |>
  roboplot(
    Suunta,
    title = "Energian tuonti",
    subtitle = "Luottamusalueella",
    caption = "Tilastokeskus",
    confidence_interval = set_confidence_interval("bars", bar_color = "green")
  )

# Change opacity and smoothing of the confidence area, hide the area from legend, 
# and pass the column nameexplicitly if it not called "confidence_interval".
d |>
  dplyr::rename(conf = confidence_interval) |>
  roboplot(
    Suunta,
    title = "Energian tuonti",
    subtitle = "Luottamusalueella",
    caption = "Tilastokeskus",
    confidence_interval = set_confidence_interval(
      "area",
      confidence = conf,
      opacity = 0.1,
      smoothing = 0.9,
      show_legend = FALSE
    )
  )


# For more complex confidence intervals, use `set_confidence_interval()` to create 
# a custom confidence interval. The column that is intended to be used for confidence 
# interval is a character or factor column describing the labels of the confidence areas, 
# and the relating values are in the same numeric column as the y-axis of the trace 
# specified in param `color` of roboplot. For this example, we will simulate a range of values.
d <- energiantuonti  |>
  dplyr::filter(Alue == "Venäjä") |>
  dplyr::filter(lubridate::year(time) >= "2020") |>
  dplyr::group_split(Suunta) |>
  purrr::map(~ {
    this <- .x
    upper_bound <- purrr::imap(c(0.5, 1, 2), function(x, y) {
      tibble::tibble(this$value + (this$value * runif(1) * x)) |> stats::setNames(as.character(y))
    }) |>
      purrr::list_cbind() |>
      dplyr::rowwise() |>
      dplyr::mutate(`70\%` = max(c(`1`, `2`, `3`)),
                    `85\%` = mean(c(`1`, `2`, `3`)),
                    `95\%` = min(c(`1`, `2`, `3`))) |>
      dplyr::ungroup() |>
      dplyr::select(-1, -2, -3) |>
      dplyr::bind_cols(dplyr::select(this, -value)) |>
      tidyr::pivot_longer(ends_with("\%"), names_to = "confidence_interval")
    lower_bound <- purrr::imap(c(0.5, 1, 2), function(x, y) {
      tibble::tibble(this$value - (this$value * runif(1) * x)) |> stats::setNames(as.character(y))
    }) |>
      purrr::list_cbind() |>
      dplyr::rowwise() |>
      dplyr::mutate(`70\%` = min(c(`1`, `2`, `3`)),
                    `85\%` = mean(c(`1`, `2`, `3`)),
                    `95\%` = max(c(`1`, `2`, `3`))) |>
      dplyr::ungroup() |>
      dplyr::select(-1, -2, -3) |>
      dplyr::bind_cols(dplyr::select(this, -value)) |>
      tidyr::pivot_longer(dplyr::ends_with("\%"), names_to = "confidence_interval")
    
    dplyr::bind_rows(this, upper_bound, lower_bound)
  }) |>
  purrr::list_rbind() |>
  dplyr::mutate(confidence_interval = forcats::fct_relevel(confidence_interval, c("95\%", "85\%"))) |>
  dplyr::bind_rows(energiantuonti  |>
                     dplyr::filter(Alue \%in\% c("Venäjä"), lubridate::year(time) < 2020)) |>
  dplyr::arrange(time)

# The labels of the confidence intervals are from the column `confidence_interval`,
# arranged in the order of the levels of the factor, or in the order of appearance 
# if character.
d |> roboplot(
  Suunta,
  "Confidence interval",
  caption = "Tilastokeskus",
  confidence_interval = set_confidence_interval("area")
)

# Start the area from the last point of the trace where you have no confidence interval values.
d |> 
  roboplot(
  Suunta,
  "Confidence interval",
  caption = "Tilastokeskus",
  confidence_interval = set_confidence_interval("area", start_type = "point")
)
# Works when you want to skip the line of the trace, only draw the area.
d |>
  dplyr::filter(Suunta == "Tuonti", !is.na(confidence_interval)) |>
  roboplot(
  Suunta,
  "Confidence interval",
  caption = "Tilastokeskus",
  confidence_interval = set_confidence_interval("area")
)

# For error_bars, you can also use a character or factor column if the values are
# won't be symmetrical for each time point.
d |>
  dplyr::filter(confidence_interval == "95\%" | is.na(confidence_interval)) |>
  roboplot(
    Suunta,
    "Confidence interval",
    caption = "Tilastokeskus",
    pattern = Alue,
    confidence_interval = set_confidence_interval("bars")
  )
}
