% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/labels.R
\name{set_labels}
\alias{set_labels}
\title{Label configuration.}
\usage{
set_labels(style = "none", color = NULL, text_col = NULL, size = NULL, ...)
}
\arguments{
\item{style}{Character. Use 'none' for no labels (the default for all but
pie plots). With \code{plot_type} "scatter" you can use 'auto' or 'last', with \code{plot_type}
"bar" you can use 'auto', 'outside' or 'mini', and with \code{plot_type} pie you can
use 'auto' or 'percent'.}

\item{color}{Symbol. Use this to control the color of text outside the corresponding
trace. The default is trace color. Color of text inside a trace is always controlled
by \link[=roboplot]{roboplot} to ensure accessibility.}

\item{text_col}{Symbol. The column used for labeling if something else than your
trace values.}

\item{...}{When using \link[=set_roboplot_options]{set_roboplot_options} to set labels,
you should provide any or all of \link{set_labels(scatter, bar, pie)}, with 'scatter'
controlling the global behavior of both lines and scatters. Do not use these when
providing label styles inside \link[=roboplot]{roboplot}, use \code{style} instead.}
}
\description{
Parameters to customize labels displayed with \link[=roboplot]{roboplots} traces. Use
\link[=set_title]{set_title}, \link[=set_caption]{set_caption}, \link[=set_legend]{set_legend},
and \link[=set_plot_axes]{set_plot_axes} with other labeling.
}
\examples{
# Use `set_labels(style = "auto")` to automatically set the labels in bar plots
# inside or outside of bars according to how they fit.
d <- energiantuonti |> dplyr::filter(Alue == "USA")

d |> roboplot(Suunta, plot_type = "bar", plot_mode = "dodge", labels = set_labels("auto"))

# Use `style = "mini"` to label only the bars where the labels don't fit (ie. the
# smallest bars). You can omit using the `set_labels()`-function if you only wish
# to provide the state
d |> roboplot(Suunta, plot_type = "bar", plot_mode = "dodge", labels = "mini")

# `"inside"` and `"outside"` to force either state
d |> roboplot(Suunta, plot_type = "bar", plot_mode = "dodge", labels = "outside")

# Give `color` if you want to override the colors of labels outside the bars.
# `roboplot()` will always use its internal color paletter for the labels inside 
# the bars to ensure accessibility. Give `size`to override the automatic font sizes
# plotly uses.
d |> roboplot(
  Suunta,
  plot_type = "bar",
  labels = set_labels("auto", color = "black", size = 15)
)

# Works with horizontal bars, too
energiantuonti |>
  dplyr::filter(time == max(time), Suunta == "Tuonti") |>
  roboplot(
    Suunta,
    plot_type = "bar",
    plot_mode = "horizontalfill",
    plot_axes = set_axes(y = "Alue"),
    labels = set_labels(style = "auto", size = 22)
  )

# For scatter traces, use "auto" to highlight data points. You most likely will 
# need to provide y-axis limits manually.
d |> roboplot(Suunta, labels = "auto", plot_axes = set_axes(ylim = c(-60, 700)))

# If you specify axis limits or `xaxis_ceiling`, `roboplotr()` will not be able
# to detect x-axis limits correctly. Use xaxis_ceiling "default" should work.
d |> roboplot(Suunta, labels = "auto", xaxis_ceiling = "guess")

# Pies can handle only no labels, or percentage labels.
energiantuonti |>
  dplyr::filter(time == max(time), Suunta == "Tuonti") |>
  roboplot(Alue, plot_type = "pie")


# Set defaults with `set_roboplot_options()` by trace type.
set_roboplot_options(labels = set_labels(scatter = "auto", bar = "mini", pie = "none"))
}
