% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/colors_patterns.R
\name{set_heatmap}
\alias{set_heatmap}
\title{Heatmap specifications for \code{\link[=robotable]{robotable()}}}
\usage{
set_heatmap(
  maxcolor = last(getOption("roboplot.colors.traces")),
  midcolor = getOption("roboplot.colors.background"),
  mincolor = first(getOption("roboplot.colors.traces")),
  maxvalue = NULL,
  midvalue = NULL,
  minvalue = NULL
)
}
\arguments{
\item{maxcolor, midcolor, mincolor}{Characters. Colors used for heatmap color range. Must be a hexadecimal color strings or a valid css color strings.}

\item{maxvalue, midvalue, minvalue}{Numerics. Optional. Numeric breakpoints where the 'maxcolor', 'midcolor' and 'mincolor' colors are set at.
Any values falling outside of this range will have the nearest corresponding color. If not provided, \code{\link[=robotable]{robotable()}} calculates the values from the data.
Currently only support heatmaps across all numeric columns in the given \code{\link[=robotable]{robotable()}}.}
}
\value{
A list
}
\description{
Use in \code{\link[=robotable]{robotable()}} parameter 'heatmap' to get a list used for setting up the heatmap colors and value breaks.
}
\examples{
\dontrun{
# Use [set_heatmap()] to specify any the colors are value breaks used in heatmaps.
d <- roboplotr::energiantuonti |>
  dplyr::filter(Alue \%in\% c("Ruotsi","Kanada")) |>
  tidyr::unite(Tiedot, Alue, Suunta, sep = ", ") |>
  dplyr::arrange(Tiedot, time) |>
  tidyr::pivot_wider(names_from = Tiedot) |>
  dplyr::mutate(dplyr::across(where(is.numeric), ~ tidyr::replace_na(.x, 0))) |>
  dplyr::arrange(time)
# No specifications uses the ends of the default trace colors set with
# [set_roboplot_options()] and bases the numeric breakpoints on the data.

d |> robotable(heatmap = set_heatmap())
# You can specify any of the parameters separately, and [robotable()] fills in the rest.
d |>
  robotable(heatmap = set_heatmap(
    midcolor = "white",
    mincolor = "lightblue",
    midvalue = 75
  ))
}
}
