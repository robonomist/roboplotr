% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/widgets.R
\name{roboplot_create_widget}
\alias{roboplot_create_widget}
\title{File creation from \code{\link[=roboplot]{roboplot()}}s}
\usage{
roboplot_create_widget(
  p,
  title = NULL,
  filepath = getOption("roboplot.artefacts")$filepath,
  render = getOption("roboplot.artefacts")$render,
  self_contained = getOption("roboplot.artefacts")$self_contained,
  zoom = getOption("roboplot.artefacts")$zoom,
  artefacts = getOption("roboplot.artefacts")$artefacts,
  width = getOption("roboplot.artefacts")$width,
  height = getOption("roboplot.artefacts")$height
)
}
\arguments{
\item{p}{A plotly object.}

\item{title}{Character. The filename of the artefact(s) created
(without file format). Will be formatted with underscores, and the title
of argument 'p' will be used if no title is provided.}

\item{filepath}{Character. The filepath to the created artefacts.}

\item{render}{Logical. Controls if the plot saved will be displayed in
viewer. Plot will be returned silently in either case.}

\item{self_contained}{Logical. Controls if the plot dependencies will be
saved in an adjacent directory "plot_dependencies" or contained within the
file, increasing size.}

\item{zoom}{Numeric. Controls the zoom level of static images if any are
defined with 'artefacts'. Default 1.}

\item{artefacts}{Character vector. Controls what artefacts are saved. One or
more of "html", "png", "jpg", "jpge", "webp", or "pdf".}

\item{width, height}{Numeric. Sets the size of any static images created. Any
artefacts created with \code{\link[=roboplot]{roboplot()}}'s 'artefacts' parameter will use the given
dimensions, if any, for that plot.}
}
\value{
A list of classes "plotly" and "html"
}
\description{
Write html and and other files from \code{\link[=roboplot]{roboplot()}} plots
}
\examples{
# Saving roboplotr::roboplot() plots as files can be controlled by setting
# global options with roboplotr::set_roboplot_options() (see documentation),
# and using roboplotr::set_artefacts() in roboplotr::roboplot() parameter
# 'artefacts', but you can use this function as well. Control location of the
# files with 'filepath'. Default 'filepath' will be the current working
# directory. If a 'title' is not provided, it will be parsed from plot title.

d <- energiantuonti |> dplyr::filter(Alue == "Kanada",Suunta == "Tuonti")

d |>
  roboplot(
    Alue, "Energian tuonti Kanadasta", "Milj €", "Tilastokeskus"
    ) |>
  roboplot_create_widget(filepath = tempdir())

file.exists(paste0(tempdir(),"/energian_tuonti_kanadasta.html"))

# You can provide the filename as string and
# roboplotr::roboplot_create_widget() will parse the filename from that. The
# plot will always be silently returned, but 'render' controls whether it
# will be displayed in viewer on widget creation. Normally
# roboplotr::roboplot() html widgets will have dependencies contained in an
# external folder "plot_dependencies", but elements can be bundled within the
# widgets with 'self_contained' (if you want to forward the file, perhaps).

d |>
  roboplot(
    Alue, "Kanadan energiantuonti", "Milj €", "Tilastokeskus"
    ) |>
  roboplot_create_widget(
    title = "Energian tuonti - Kanada",
    filepath = tempdir(),
    render = FALSE,
    self_contained = FALSE
  )

file.exists(paste0(tempdir(),"/energian_tuonti_kanada.html"))

# If you want to create static plot files, use a character vector of file
# types in 'artefacts'. Exclude "html" if you want to create static plots
# only. Possible filetypes are "html","png","jpg","jpge","webp","pdf". The
# static files created this way will respect the plot layout specifications
# of the roboplotr::roboplot() plot, unlike the ones downloaded through
# modebar (set those with roboplotr::set_roboplot_options()). Note that modebar
# gives access to svg file format, while automating it the file creation with
# roboplotr::roboplot_create_widget() or roboplotr::roboplot() allows for pdf
# files.

if(interactive()) {
  d |>
    roboplot(
      color = Alue,
      title = "Kanadan energiantuonti",
      subtitle = "Milj €",
      caption = "Tilastokeskus",
      width = 400,
      height = 800
    ) |>
    roboplot_create_widget(filepath = tempdir(), artefacts = "pdf")

  utils::browseURL(paste0(tempdir(), "/kanadan_energiantuonti.pdf"))
}
}
